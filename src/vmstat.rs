use chrono::{DateTime, Local};
use std::collections::HashMap;
use crate::common::{ProcData, Statistic, single_statistic_u64};
use crate::add_list_of_u64_data_to_statistics;
use crate::HISTORY;

#[derive(Debug)]
pub struct VmStatInfo {
    pub timestamp: DateTime<Local>,
    pub nr_free_pages: f64,
    pub nr_zone_inactive_anon: f64,
    pub nr_zone_active_anon: f64,
    pub nr_zone_inactive_file: f64,
    pub nr_zone_active_file: f64,
    pub nr_zone_unevictable: f64,
    pub nr_zone_write_pending: f64,
    pub nr_mlock: f64,
    pub nr_bounce: f64,
    pub nr_zspages: f64,
    pub nr_free_cma: f64,
    pub numa_hit: f64,
    pub numa_miss: f64,
    pub numa_foreign: f64,
    pub numa_interleave: f64,
    pub numa_local: f64,
    pub numa_other: f64,
    pub nr_inactive_anon: f64,
    pub nr_active_anon: f64,
    pub nr_inactive_file: f64,
    pub nr_active_file: f64,
    pub nr_unevictable: f64,
    pub nr_slab_reclaimable: f64,
    pub nr_slab_unreclaimable: f64,
    pub nr_isolated_anon: f64,
    pub nr_isolated_file: f64,
    pub workingset_nodes: f64,
    pub workingset_refault_anon: f64,
    pub workingset_refault_file: f64,
    pub workingset_activate_anon: f64,
    pub workingset_activate_file: f64,
    pub workingset_restore_anon: f64,
    pub workingset_restore_file: f64,
    pub workingset_nodereclaim: f64,
    pub nr_anon_pages: f64,
    pub nr_mapped: f64,
    pub nr_file_pages: f64,
    pub nr_dirty: f64,
    pub nr_writeback: f64,
    pub nr_writeback_temp: f64,
    pub nr_shmem: f64,
    pub nr_shmem_hugepages: f64,
    pub nr_shmem_pmdmapped: f64,
    pub nr_file_hugepages: f64,
    pub nr_file_pmdmapped: f64,
    pub nr_anon_transparent_hugepages: f64,
    pub nr_vmscan_write: f64,
    pub nr_vmscan_immediate_reclaim: f64,
    pub nr_dirtied: f64,
    pub nr_written: f64,
    pub nr_throttled_written: f64,
    pub nr_kernel_misc_reclaimable: f64,
    pub nr_foll_pin_acquired: f64,
    pub nr_foll_pin_released: f64,
    pub nr_kernel_stack: f64,
    pub nr_shadow_call_stack: f64,
    pub nr_page_table_pages: f64,
    pub nr_sec_page_table_pages: f64,
    pub nr_swapcached: f64,
    pub pgpromote_success: f64,
    pub pgpromote_candidate: f64,
    pub nr_dirty_threshold: f64,
    pub nr_dirty_background_threshold: f64,
    pub pgpgin: f64,
    pub pgpgout: f64,
    pub pswpin: f64,
    pub pswpout: f64,
    pub pgalloc_dma: f64,
    pub pgalloc_dma32: f64,
    pub pgalloc_normal: f64,
    pub pgalloc_movable: f64,
    pub pgalloc_device: f64,
    pub allocstall_dma: f64,
    pub allocstall_dma32: f64,
    pub allocstall_normal: f64,
    pub allocstall_movable: f64,
    pub allocstall_device: f64,
    pub pgskip_dma: f64,
    pub pgskip_dma32: f64,
    pub pgskip_normal: f64,
    pub pgskip_movable: f64,
    pub pgskip_device: f64,
    pub pgfree: f64,
    pub pgactivate: f64,
    pub pgdeactivate: f64,
    pub pglazyfree: f64,
    pub pglazyfreed: f64,
    pub pgfault: f64,
    pub pgmajfault: f64,
    pub pgrefill: f64,
    pub pgreuse: f64,
    pub pgsteal_kswapd: f64,
    pub pgsteal_direct: f64,
    pub pgsteal_khugepaged: f64,
    pub pgdemote_kswapd: f64,
    pub pgdemote_direct: f64,
    pub pgdemote_khugepaged: f64,
    pub pgscan_kswapd: f64,
    pub pgscan_direct: f64,
    pub pgscan_khugepaged: f64,
    pub pgscan_direct_throttle: f64,
    pub pgscan_anon: f64,
    pub pgscan_file: f64,
    pub pgsteal_anon: f64,
    pub pgsteal_file: f64,
    pub zone_reclaim_failed: f64,
    pub pginodesteal: f64,
    pub slabs_scanned: f64,
    pub kswapd_inodesteal: f64,
    pub kswapd_low_wmark_hit_quickly: f64,
    pub kswapd_high_wmark_hit_quickly: f64,
    pub pageoutrun: f64,
    pub pgrotated: f64,
    pub drop_pagecache: f64,
    pub drop_slab: f64,
    pub oom_kill: f64,
    pub numa_pte_updates: f64,
    pub numa_huge_pte_updates: f64,
    pub numa_hint_faults: f64,
    pub numa_hint_faults_local: f64,
    pub numa_pages_migrated: f64,
    pub pgmigrate_success: f64,
    pub pgmigrate_fail: f64,
    pub thp_migration_success: f64,
    pub thp_migration_fail: f64,
    pub thp_migration_split: f64,
    pub compact_migrate_scanned: f64,
    pub compact_free_scanned: f64,
    pub compact_isolated: f64,
    pub compact_stall: f64,
    pub compact_fail: f64,
    pub compact_success: f64,
    pub compact_daemon_wake: f64,
    pub compact_daemon_migrate_scanned: f64,
    pub compact_daemon_free_scanned: f64,
    pub htlb_buddy_alloc_success: f64,
    pub htlb_buddy_alloc_fail: f64,
    pub cma_alloc_success: f64,
    pub cma_alloc_fail: f64,
    pub unevictable_pgs_culled: f64,
    pub unevictable_pgs_scanned: f64,
    pub unevictable_pgs_rescued: f64,
    pub unevictable_pgs_mlocked: f64,
    pub unevictable_pgs_munlocked: f64,
    pub unevictable_pgs_cleared: f64,
    pub unevictable_pgs_stranded: f64,
    pub thp_fault_alloc: f64,
    pub thp_fault_fallback: f64,
    pub thp_fault_fallback_charge: f64,
    pub thp_collapse_alloc: f64,
    pub thp_collapse_alloc_failed: f64,
    pub thp_file_alloc: f64,
    pub thp_file_fallback: f64,
    pub thp_file_fallback_charge: f64,
    pub thp_file_mapped: f64,
    pub thp_split_page: f64,
    pub thp_split_page_failed: f64,
    pub thp_deferred_split_page: f64,
    pub thp_split_pmd: f64,
    pub thp_scan_exceed_none_pte: f64,
    pub thp_scan_exceed_swap_pte: f64,
    pub thp_scan_exceed_share_pte: f64,
    pub thp_zero_page_alloc: f64,
    pub thp_zero_page_alloc_failed: f64,
    pub thp_swpout: f64,
    pub thp_swpout_fallback: f64,
    pub balloon_inflate: f64,
    pub balloon_deflate: f64,
    pub balloon_migrate: f64,
    pub swap_ra: f64,
    pub swap_ra_hit: f64,
    pub ksm_swpin_copy: f64,
    pub cow_ksm: f64,
    pub zswpin: f64,
    pub zswpout: f64,
    pub nr_unstable: f64,
}

pub async fn process_vmstat_data(proc_data: &ProcData, statistics: &mut HashMap<(String, String, String), Statistic>) {
    add_list_of_u64_data_to_statistics!(vmstat, "", proc_data.timestamp, proc_data, vmstat, statistics, nr_free_pages, nr_zone_inactive_anon, nr_zone_active_anon, nr_zone_inactive_file, nr_zone_active_file, nr_zone_unevictable, nr_zone_write_pending, nr_mlock, nr_bounce, nr_zspages, nr_free_cma, numa_hit, numa_miss, numa_foreign, numa_interleave, numa_local, numa_other, nr_inactive_anon, nr_active_anon, nr_active_file, nr_inactive_file, nr_unevictable, nr_slab_reclaimable, nr_slab_unreclaimable, nr_isolated_anon, nr_isolated_file, workingset_nodes, workingset_refault_anon, workingset_refault_file, workingset_activate_anon, workingset_activate_file, workingset_restore_anon, workingset_restore_file, workingset_nodereclaim, nr_anon_pages, nr_mapped, nr_file_pages, nr_dirty, nr_writeback, nr_writeback_temp, nr_shmem, nr_shmem_hugepages, nr_shmem_pmdmapped, nr_file_hugepages, nr_file_pmdmapped, nr_anon_transparent_hugepages, nr_vmscan_write, nr_vmscan_immediate_reclaim, nr_dirtied, nr_written, nr_throttled_written, nr_kernel_misc_reclaimable, nr_foll_pin_acquired, nr_foll_pin_released, nr_kernel_stack, nr_shadow_call_stack, nr_page_table_pages, nr_sec_page_table_pages, nr_swapcached, pgpromote_success, pgpromote_candidate, nr_dirty_threshold, nr_dirty_background_threshold, pgpgin, pgpgout, pswpin, pswpout, pgalloc_dma, pgalloc_dma32, pgalloc_normal, pgalloc_movable, pgalloc_device, allocstall_dma, allocstall_dma32, allocstall_normal, allocstall_movable, allocstall_device, pgskip_dma, pgskip_dma32, pgskip_normal, pgskip_movable, pgskip_device, pgfree, pgactivate, pgdeactivate, pglazyfree, pglazyfreed, pgrefill, pgfault, pgmajfault, pgreuse, pgsteal_kswapd, pgsteal_direct, pgsteal_khugepaged, pgdemote_kswapd, pgdemote_direct, pgdemote_khugepaged, pgscan_kswapd, pgscan_direct, pgscan_khugepaged, pgscan_direct_throttle, pgscan_anon, pgscan_file, pgsteal_anon, pgsteal_file, zone_reclaim_failed, pginodesteal, slabs_scanned, kswapd_inodesteal, kswapd_low_wmark_hit_quickly, kswapd_high_wmark_hit_quickly, pageoutrun, pgrotated, drop_pagecache, drop_slab, oom_kill, numa_pte_updates, numa_huge_pte_updates, numa_hint_faults, numa_hint_faults_local, numa_pages_migrated, pgmigrate_success, pgmigrate_fail, thp_migration_success, thp_migration_fail, thp_migration_split, compact_migrate_scanned, compact_free_scanned, compact_isolated, compact_stall, compact_fail, compact_success, compact_daemon_wake, compact_daemon_migrate_scanned, compact_daemon_free_scanned, htlb_buddy_alloc_success, htlb_buddy_alloc_fail, cma_alloc_success, cma_alloc_fail, unevictable_pgs_culled, unevictable_pgs_scanned, unevictable_pgs_rescued, unevictable_pgs_mlocked, unevictable_pgs_munlocked, unevictable_pgs_cleared, unevictable_pgs_stranded, thp_fault_alloc, thp_fault_fallback, thp_fault_fallback_charge, thp_collapse_alloc, thp_collapse_alloc_failed, thp_file_alloc, thp_file_fallback, thp_file_fallback_charge, thp_file_mapped, thp_split_page, thp_split_page_failed, thp_deferred_split_page, thp_split_pmd, thp_scan_exceed_none_pte, thp_scan_exceed_swap_pte, thp_scan_exceed_share_pte, thp_zero_page_alloc, thp_zero_page_alloc_failed, thp_swpout, thp_swpout_fallback, balloon_inflate, balloon_deflate, balloon_migrate, swap_ra, swap_ra_hit, ksm_swpin_copy, cow_ksm, zswpin, zswpout, nr_unstable);
}

pub async fn add_vmstat_to_history(statistics: &HashMap<(String, String, String), Statistic>)
{
    if !statistics.get(&("vmstat".to_string(), "".to_string(), "nr_free_pages".to_string())).unwrap().updated_value { return };
    let timestamp = statistics.get(&("vmstat".to_string(), "".to_string(), "nr_free_pages".to_string())).unwrap().last_timestamp;

    macro_rules! generate_assignments_for_history_addition {
        ($($field_name:ident),*) => {
            $(
                let $field_name = statistics.get(&("vmstat".to_string(), "".to_string(), stringify!($field_name).to_string())).unwrap().per_second_value; 
            )*
        };
    }
    generate_assignments_for_history_addition! (nr_free_pages, nr_zone_inactive_anon, nr_zone_active_anon, nr_zone_inactive_file, nr_zone_active_file, nr_zone_unevictable, nr_zone_write_pending, nr_mlock, nr_bounce, nr_zspages, nr_free_cma, numa_hit, numa_miss, numa_foreign, numa_interleave, numa_local, numa_other, nr_inactive_anon, nr_active_anon, nr_active_file, nr_inactive_file, nr_unevictable, nr_slab_reclaimable, nr_slab_unreclaimable, nr_isolated_anon, nr_isolated_file, workingset_nodes, workingset_refault_anon, workingset_refault_file, workingset_activate_anon, workingset_activate_file, workingset_restore_anon, workingset_restore_file, workingset_nodereclaim, nr_anon_pages, nr_mapped, nr_file_pages, nr_dirty, nr_writeback, nr_writeback_temp, nr_shmem, nr_shmem_hugepages, nr_shmem_pmdmapped, nr_file_hugepages, nr_file_pmdmapped, nr_anon_transparent_hugepages, nr_vmscan_write, nr_vmscan_immediate_reclaim, nr_dirtied, nr_written, nr_throttled_written, nr_kernel_misc_reclaimable, nr_foll_pin_acquired, nr_foll_pin_released, nr_kernel_stack, nr_shadow_call_stack, nr_page_table_pages, nr_sec_page_table_pages, nr_swapcached, pgpromote_success, pgpromote_candidate, nr_dirty_threshold, nr_dirty_background_threshold, pgpgin, pgpgout, pswpin, pswpout, pgalloc_dma, pgalloc_dma32, pgalloc_normal, pgalloc_movable, pgalloc_device, allocstall_dma, allocstall_dma32, allocstall_normal, allocstall_movable, allocstall_device, pgskip_dma, pgskip_dma32, pgskip_normal, pgskip_movable, pgskip_device, pgfree, pgactivate, pgdeactivate, pglazyfree, pglazyfreed, pgrefill, pgfault, pgmajfault, pgreuse, pgsteal_kswapd, pgsteal_direct, pgsteal_khugepaged, pgdemote_kswapd, pgdemote_direct, pgdemote_khugepaged, pgscan_kswapd, pgscan_direct, pgscan_khugepaged, pgscan_direct_throttle, pgscan_anon, pgscan_file, pgsteal_anon, pgsteal_file, zone_reclaim_failed, pginodesteal, slabs_scanned, kswapd_inodesteal, kswapd_low_wmark_hit_quickly, kswapd_high_wmark_hit_quickly, pageoutrun, pgrotated, drop_pagecache, drop_slab, oom_kill, numa_pte_updates, numa_huge_pte_updates, numa_hint_faults, numa_hint_faults_local, numa_pages_migrated, pgmigrate_success, pgmigrate_fail, thp_migration_success, thp_migration_fail, thp_migration_split, compact_migrate_scanned, compact_free_scanned, compact_isolated, compact_stall, compact_fail, compact_success, compact_daemon_wake, compact_daemon_migrate_scanned, compact_daemon_free_scanned, htlb_buddy_alloc_success, htlb_buddy_alloc_fail, cma_alloc_success, cma_alloc_fail, unevictable_pgs_culled, unevictable_pgs_scanned, unevictable_pgs_rescued, unevictable_pgs_mlocked, unevictable_pgs_munlocked, unevictable_pgs_cleared, unevictable_pgs_stranded, thp_fault_alloc, thp_fault_fallback, thp_fault_fallback_charge, thp_collapse_alloc, thp_collapse_alloc_failed, thp_file_alloc, thp_file_fallback, thp_file_fallback_charge, thp_file_mapped, thp_split_page, thp_split_page_failed, thp_deferred_split_page, thp_split_pmd, thp_scan_exceed_none_pte, thp_scan_exceed_swap_pte, thp_scan_exceed_share_pte, thp_zero_page_alloc, thp_zero_page_alloc_failed, thp_swpout, thp_swpout_fallback, balloon_inflate, balloon_deflate, balloon_migrate, swap_ra, swap_ra_hit, ksm_swpin_copy, cow_ksm, zswpin, zswpout, nr_unstable);

    HISTORY.vmstat.write().unwrap().push_back( VmStatInfo {
        timestamp,
        nr_free_pages,
    nr_zone_inactive_anon,
    nr_zone_active_anon,
    nr_zone_inactive_file,
    nr_zone_active_file,
    nr_zone_unevictable,
    nr_zone_write_pending,
    nr_mlock,
    nr_bounce,
    nr_zspages,
    nr_free_cma,
    numa_hit,
    numa_miss,
    numa_foreign,
    numa_interleave,
    numa_local,
    numa_other,
    nr_inactive_anon,
    nr_active_anon,
    nr_inactive_file,
    nr_active_file,
    nr_unevictable,
    nr_slab_reclaimable,
    nr_slab_unreclaimable,
    nr_isolated_anon,
    nr_isolated_file,
    workingset_nodes,
    workingset_refault_anon,
    workingset_refault_file,
    workingset_activate_anon,
    workingset_activate_file,
    workingset_restore_anon,
    workingset_restore_file,
    workingset_nodereclaim,
    nr_anon_pages,
    nr_mapped,
    nr_file_pages,
    nr_dirty,
    nr_writeback,
    nr_writeback_temp,
    nr_shmem,
    nr_shmem_hugepages,
    nr_shmem_pmdmapped,
    nr_file_hugepages,
    nr_file_pmdmapped,
    nr_anon_transparent_hugepages,
    nr_vmscan_write,
    nr_vmscan_immediate_reclaim,
    nr_dirtied,
    nr_written,
    nr_throttled_written,
    nr_kernel_misc_reclaimable,
    nr_foll_pin_acquired,
    nr_foll_pin_released,
    nr_kernel_stack,
    nr_shadow_call_stack,
    nr_page_table_pages,
    nr_sec_page_table_pages,
    nr_swapcached,
    pgpromote_success,
    pgpromote_candidate,
    nr_dirty_threshold,
    nr_dirty_background_threshold,
    pgpgin,
    pgpgout,
    pswpin,
    pswpout,
    pgalloc_dma,
    pgalloc_dma32,
    pgalloc_normal,
    pgalloc_movable,
    pgalloc_device,
    allocstall_dma,
    allocstall_dma32,
    allocstall_normal,
    allocstall_movable,
    allocstall_device,
    pgskip_dma,
    pgskip_dma32,
    pgskip_normal,
    pgskip_movable,
    pgskip_device,
    pgfree,
    pgactivate,
    pgdeactivate,
    pglazyfree,
    pglazyfreed,
    pgfault,
    pgmajfault,
    pgrefill,
    pgreuse,
    pgsteal_kswapd,
    pgsteal_direct,
    pgsteal_khugepaged,
    pgdemote_kswapd,
    pgdemote_direct,
    pgdemote_khugepaged,
    pgscan_kswapd,
    pgscan_direct,
    pgscan_khugepaged,
    pgscan_direct_throttle,
    pgscan_anon,
    pgscan_file,
    pgsteal_anon,
    pgsteal_file,
    zone_reclaim_failed,
    pginodesteal,
    slabs_scanned,
    kswapd_inodesteal,
    kswapd_low_wmark_hit_quickly,
    kswapd_high_wmark_hit_quickly,
    pageoutrun,
    pgrotated,
    drop_pagecache,
    drop_slab,
    oom_kill,
    numa_pte_updates,
    numa_huge_pte_updates,
    numa_hint_faults,
    numa_hint_faults_local,
    numa_pages_migrated,
    pgmigrate_success,
    pgmigrate_fail,
    thp_migration_success,
    thp_migration_fail,
    thp_migration_split,
    compact_migrate_scanned,
    compact_free_scanned,
    compact_isolated,
    compact_stall,
    compact_fail,
    compact_success,
    compact_daemon_wake,
    compact_daemon_migrate_scanned,
    compact_daemon_free_scanned,
    htlb_buddy_alloc_success,
    htlb_buddy_alloc_fail,
    cma_alloc_success,
    cma_alloc_fail,
    unevictable_pgs_culled,
    unevictable_pgs_scanned,
    unevictable_pgs_rescued,
    unevictable_pgs_mlocked,
    unevictable_pgs_munlocked,
    unevictable_pgs_cleared,
    unevictable_pgs_stranded,
    thp_fault_alloc,
    thp_fault_fallback,
    thp_fault_fallback_charge,
    thp_collapse_alloc,
    thp_collapse_alloc_failed,
    thp_file_alloc,
    thp_file_fallback,
    thp_file_fallback_charge,
    thp_file_mapped,
    thp_split_page,
    thp_split_page_failed,
    thp_deferred_split_page,
    thp_split_pmd,
    thp_scan_exceed_none_pte,
    thp_scan_exceed_swap_pte,
    thp_scan_exceed_share_pte,
    thp_zero_page_alloc,
    thp_zero_page_alloc_failed,
    thp_swpout,
    thp_swpout_fallback,
    balloon_inflate,
    balloon_deflate,
    balloon_migrate,
    swap_ra,
    swap_ra_hit,
    ksm_swpin_copy,
    cow_ksm,
    zswpin,
    zswpout,
    nr_unstable,
    });
}


pub async fn print_vmstat(statistics: &HashMap<(String, String, String), Statistic>, output: &str, print_header: bool)
{
    if print_header
    {
        match output
        {
            //https://github.com/sysstat/sysstat/blob/499f5b153e9707892bb8841d37e6ed3a0aa617e2/rd_stats.c#L737
            "sar-B" => {
                println!("{:10} {:7}    {:>10} {:>10} {:>10} {:>10} {:>10} {:>10} {:>10} {:>10} {:>10} {:>10}",
                         "Timestamp",
                         "cpu",
                         "pgpgin/s",
                         "pgpgout/s",
                         "fault/s",
                         "majfault/s",
                         "pgfree/s",
                         "pgscank/s",
                         "pgscand/s",
                         "pgsteal/s",
                         "pgprom/s",
                         "pgdem/s",
                );
            },
            &_ => todo! {},
        }
    }
    if !statistics.get(&("vmstat".to_string(), "".to_string(), "pgpgin".to_string())).unwrap().updated_value { return };
    let timestamp = statistics.get(&("vmstat".to_string(), "".to_string(), "pgpgin".to_string())).unwrap().last_timestamp;

    macro_rules! generate_assignmets_for_used_statistics {
        ($($field_name:ident),*) => {
            $(
                let $field_name = statistics.get(&("vmstat".to_string(), "".to_string(), stringify!($field_name).to_string())).unwrap().per_second_value; 
            )*
        };
    }
        generate_assignmets_for_used_statistics!(pgpgin, pgpgout, pgfault, pgmajfault, pgfree, pgscan_kswapd, pgscan_direct, pgsteal_anon, pgsteal_file, pgpromote_success, pgdemote_kswapd, pgdemote_direct, pgdemote_khugepaged);

    match output
    {
        "sar-B" => {
            println!("{:10} {:7}    {:10.2} {:10.2} {:10.2} {:10.2} {:10.2} {:10.2} {:10.2} {:10.2} {:10.2} {:10.2}",
                     timestamp.format("%H:%M:%S"),
                     "all",
                    pgpgin,
                    pgpgout,
                    pgfault,
                    pgmajfault,
                    pgfree,
                    pgscan_kswapd,
                    pgscan_direct,
                    pgsteal_anon + pgsteal_file,
                    pgpromote_success,
                    pgdemote_kswapd + pgdemote_direct + pgdemote_khugepaged,

            );
        },
        &_ => todo!{},
    }
}
